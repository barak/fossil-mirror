Version taken as

   1:$(cat VERSION)

The debianized sources are tracked in fossil, of course.

Brief "cheat sheet" of relevant fossil commands.

 ## FOR NEW UPSTREAM RELEASE

 # fetch & merge new upstream release
 uscan
 EPOCH=1
 VER=xxx
 DEBVER=1
 fossil pull https://www.fossil-scm.org
 ID=fossil-commit-id	# find via: fossil timeline -t ci -n 400 | more
			# then search for the tag "version-xxx"
 fossil merge version-${VER}
 fossil commit -m "merge version-${VER}"
 debchange --distribution unstable --newversion=${EPOCH}:${VER}-${DEBVER} New upstream version
 fossil commit -m 'update debian/changelog'

 # build debian release
 dpkg-buildpackage -i.fslckout -i_FOSSIL_
 # but its better to use a chroot
 pdebuild --pbuilder cowbuilder --debbuildopts "-i.fslckout -i_FOSSIL_"
 sudo mv --no-clobber /var/cache/pbuilder/result/fossil* ../

 # tag debian release
 fossil tag add debian_${VER}-${DEBVER} debian

 # push/pull to/from debian repository (modify URL if necessary)
 fossil sync ssh://people.debian.org/~bap/public_html/fossil.fsl

 ## TO START DEVELOPMENT

 # create local repository by cloning mine
 #  (Would have made a repo on chiselapp.com but couldn't get it to
 #  work for me on a repo of this size.  But this was a while ago...)
 wget https://people.debian.org/~bap/fossil.fsl

 # make a working checkout
 sudo apt install fossil
 mkdir fossil
 cd fossil
 fossil open ../fossil.fsl
 fossil co debian
 fossil user password ${USER} ${PWD}
 fossil set manifest on		# needed as of approx ver 2010.11.11.133638

 ## MISC

 # pull/view upstream development
 fossil pull http://www.fossil-scm.org/
 fossil timeline -t ci -n 40

 # create upstream tarball (not needed if using upstream release tarball)
 fossil co trunk
 tar --exclude .fslckout -C .. -zcf fossil_${VER}.orig.tar.gz fossil

 # less recently created checkouts may have _FOSSIL_ instead of
 # .fslckout, edit any commands mentioning this file appropriately.

 -- Barak A. Pearlmutter <bap@debian.org>, Mon,  1 Oct 2018 16:24:15 +0100
